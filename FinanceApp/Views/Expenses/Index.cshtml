@model IEnumerable<FinanceApp.Models.Expense>

    <h1>My Expenses</h1>

    <div class="container ">
        <table class="table table-bordered">
            <thead class="table-light">
                <tr>
                    <th>Description</th>
                    <th>Amount</th>
                    <th>Category</th>
                    <th>Date</th>
                </tr>

            </thead>
            <tbody>
            @foreach(var item in Model)
            {
                <tr>
                    <td>@item.Description</td>
                    <td>@item.Amount $</td>
                    <td>@item.Category</td>
                    <td>@item.Date.ToString("yyyy-MM-dd")</td>
                </tr>
            }
        </tbody>
        </table>
    </div>
<h2>Expense Overview</h2>
<div>
    
    <canvas id="myChart"></canvas>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    const ctx = document.getElementById('myChart');

    fetch('/Expenses/GetChart')
        .then(response => response.json())
        .then(data => { 
            console.log("Received data from API:", data);
            new Chart(ctx, {
                type: 'pie',
                data: {
                    labels: data.map(d => d.category),   // fixed variable
                    datasets: [{
                        data: data.map(d => d.total),
                        backgroundColor: [
                            'red', 'blue', 'green', 'orange', 'purple', 'yellow'
                        ]
                    }]
                },
                options: {
                    responsive: true
                }
            });
        })
        .catch(error => console.error('Error fetching chart data:', error));

        

</script>
